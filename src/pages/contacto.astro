---
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';
import Features2 from '~/components/widgets/Features2.astro';
import WhatsAppButton from '~/components/WhatsAppButton.astro';

const metadata = {
  title: 'Contacto',
};
---

<Layout metadata={metadata}>
  <HeroText tagline="Contacto" title="Trabaja Con Nosotros" />

  <section class="px-4 py-16 sm:px-6 lg:px-8 lg:py-20 bg-gray-50 dark:bg-slate-900">
    <div class="max-w-2xl mx-auto">
      <div class="text-center mb-10">
        <h2 class="text-3xl font-bold tracking-tight sm:text-4xl text-gray-900 dark:text-white">
          Estamos a un mensaje de distancia
        </h2>
        <p class="mt-4 text-lg text-gray-600 dark:text-slate-400">
          En el Instituto Psicopedagógico Juan Pablo II, valoramos la comunicación. ¡No dudes en contactarnos!
        </p>
      </div>

      <form id="contact-form" class="space-y-6 bg-white dark:bg-slate-800 p-8 rounded-lg shadow-lg" novalidate>
        <div>
          <label for="name" class="block text-sm font-semibold text-gray-700 dark:text-gray-300">Nombre</label>
          <input type="text" name="name" id="name" required class="input-field" />
        </div>

        <div>
          <label for="email" class="block text-sm font-semibold text-gray-700 dark:text-gray-300"
            >Correo Electrónico</label
          >
          <input type="email" name="email" id="email" required class="input-field" />
        </div>

        <div>
          <label for="message" class="block text-sm font-semibold text-gray-700 dark:text-gray-300">Mensaje</label>
          <textarea id="message" name="message" rows="4" required class="input-field"></textarea>
        </div>

        <div>
          <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2"
            >Adjunta tu Hoja de Vida</label
          >
          <div id="drop-area">
            <div class="drop-content">
              <svg
                class="upload-icon"
                xmlns="http://www.w3.org/2000/svg"
                width="48"
                height="48"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M14 3v4a1 1 0 0 0 1 1h4"></path>
                <path d="M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z"></path>
                <path d="M12 11v6"></path>
                <path d="M9 14l3 -3l3 3"></path>
              </svg>
              <p class="font-semibold">Arrastra y suelta tu archivo PDF aquí</p>
              <p class="text-sm text-gray-500 dark:text-slate-400">o</p>
              <button type="button" id="select-btn">Selecciona un archivo</button>
            </div>
            <input type="file" name="cv" id="cv" accept="application/pdf" class="hidden" required />
          </div>
          <div id="feedback-container" class="mt-3 text-sm"></div>
        </div>

        <div class="pt-4">
          <button type="submit" class="btn-submit w-full">Enviar Mensaje</button>
        </div>
      </form>
    </div>
  </section>

  <Features2
    title="¡Estamos aquí para ayudar!"
    columns={3}
    items={[
      { title: 'Teléfono', description: '(+57) 8545966', icon: 'tabler:headset' },
      { title: 'Whatsapp', description: '(+57) 319 6721410', icon: 'tabler:brand-whatsapp' },
      {
        title: 'Ubicación',
        description: 'Carrera 7# 13 – 34 | Soacha – Cundinamarca | Barrio Villa Flor',
        icon: 'tabler:map-pin',
      },
    ]}
  />
  <WhatsAppButton phoneNumber="573196721410" message="Hola, estoy interesado en sus servicios." />
</Layout>

<script>
  function initializeContactForm() {
    const form = document.getElementById('contact-form');
    if (!form || form.dataset.initialized === 'true') return;
    form.dataset.initialized = 'true';

    const dropArea = form.querySelector('#drop-area');
    const fileInput = form.querySelector('#cv');
    const selectBtn = form.querySelector('#select-btn');
    const feedbackContainer = form.querySelector('#feedback-container');
    const submitButton = form.querySelector('button[type="submit"]');
    const originalButtonText = submitButton ? submitButton.textContent : '';
    let isSubmitting = false;

    // --- Helper para formatear bytes ---
    function formatBytes(bytes: number, decimals = 2) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const dm = decimals < 0 ? 0 : decimals;
      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }

    function handleFile(file: File | null) {
      if (!file) {
        if (feedbackContainer) feedbackContainer.innerHTML = '';
        if (fileInput instanceof HTMLInputElement) fileInput.files = null;
        if (dropArea) dropArea.classList.remove('is-invalid');
        return;
      }

      const MAX_SIZE = 20 * 1024 * 1024; // 20 MB

      // Validación de tipo
      if (file.type !== 'application/pdf') {
        if (feedbackContainer)
          feedbackContainer.innerHTML = `<p class="file-error">❌ Error: Solo se permiten archivos PDF.</p>`;
        if (fileInput instanceof HTMLInputElement) fileInput.value = '';
        if (dropArea) dropArea.classList.add('is-invalid');
        return;
      }

      // Validación de tamaño
      if (file.size > MAX_SIZE) {
        if (feedbackContainer)
          feedbackContainer.innerHTML = `<p class="file-error">❌ Error: El archivo supera el límite de 20 MB (${formatBytes(file.size)}).</p>`;
        if (fileInput instanceof HTMLInputElement) fileInput.value = '';
        if (dropArea) dropArea.classList.add('is-invalid');
        return;
      }

      // Todo correcto: mostrar información del archivo
      if (dropArea) dropArea.classList.remove('is-invalid');
      if (feedbackContainer)
        feedbackContainer.innerHTML = `<p class="file-success">✔️ Archivo seleccionado: ${file.name} (${formatBytes(file.size)})</p>`;

      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(file);
      if (fileInput instanceof HTMLInputElement) fileInput.files = dataTransfer.files;
    }

    // --- Eventos de UI ---
    if (selectBtn && fileInput instanceof HTMLInputElement)
      selectBtn.addEventListener('click', () => fileInput.click());
    if (fileInput instanceof HTMLInputElement) {
      fileInput.addEventListener('change', () => handleFile(fileInput.files ? fileInput.files[0] : null));
    }

    if (dropArea) {
      ['dragenter', 'dragover', 'dragleave', 'drop'].forEach((eventName) => {
        dropArea.addEventListener(eventName, (e) => e.preventDefault(), false);
      });

      ['dragenter', 'dragover'].forEach((eventName) => {
        dropArea.addEventListener(eventName, () => dropArea.classList.add('is-active'), false);
      });

      ['dragleave', 'drop'].forEach((eventName) => {
        dropArea.addEventListener(eventName, () => dropArea.classList.remove('is-active'), false);
      });

      dropArea.addEventListener('drop', (e) => handleFile((e as DragEvent).dataTransfer?.files[0] ?? null));
    }

    // --- Envío del formulario ---
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (isSubmitting) return;

      isSubmitting = true;
      if (submitButton instanceof HTMLButtonElement) {
        submitButton.disabled = true;
        submitButton.textContent = 'Enviando...';
      }
      if (feedbackContainer) feedbackContainer.innerHTML = ''; // Limpiar mensajes al enviar

      try {
        const response = await fetch('/api/contact', {
          method: 'POST',
          body: new FormData(form as HTMLFormElement),
        });
        const result = await response.json();
        if (!response.ok) throw new Error(result.message);

        alert('¡Mensaje enviado con éxito! Gracias por contactarnos.');
        (form as HTMLFormElement).reset();
        if (feedbackContainer) feedbackContainer.innerHTML = '';
      } catch (error) {
        console.error('Error al enviar el formulario:', error);
        let message = 'No se pudo enviar el mensaje.';
        if (error instanceof Error) message = error.message;
        if (feedbackContainer) feedbackContainer.innerHTML = `<p class="file-error">❌ ${message}</p>`;
      } finally {
        isSubmitting = false;
        if (submitButton instanceof HTMLButtonElement) {
          submitButton.disabled = false;
          submitButton.textContent = originalButtonText;
        }
      }
    });
  }
  document.addEventListener('astro:page-load', initializeContactForm);
</script>

<style>
  .input-field {
    @apply mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50 transition duration-150 ease-in-out dark:bg-slate-700 dark:border-slate-600 dark:text-white;
    height: 2.75rem;
    font-size: 1.1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }
  textarea.input-field {
    min-height: 120px;
    font-size: 1.1rem;
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }
  #drop-area {
    @apply relative border-2 border-dashed border-gray-300 dark:border-slate-600 rounded-lg p-6 text-center cursor-pointer transition-all duration-300 ease-in-out;
  }
  #drop-area.is-active {
    @apply border-blue-500 bg-blue-50 dark:bg-blue-900/30;
  }
  #drop-area.is-invalid {
    @apply border-red-500 bg-red-50 dark:bg-red-900/30;
  }
  .drop-content {
    @apply flex flex-col items-center justify-center space-y-2 text-gray-700 dark:text-slate-300;
  }
  .upload-icon {
    @apply w-12 h-12 text-gray-400 dark:text-slate-500 mb-2;
  }
  #select-btn {
    @apply mt-2 inline-block px-4 py-2 bg-blue-600 text-white text-sm font-semibold rounded-lg hover:bg-blue-700 transition-colors;
  }
  .file-success {
    @apply text-green-600 dark:text-green-400 font-medium;
  }
  .file-error {
    @apply text-red-600 dark:text-red-400 font-medium;
  }
  .btn-submit {
    @apply w-full px-6 py-3 bg-blue-600 text-white font-bold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-75 transition-all duration-300;
  }
  .btn-submit:disabled {
    @apply bg-gray-400 cursor-not-allowed;
  }
</style>
